[{"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/index.js":"1","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/App.js":"2","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/reportWebVitals.js":"3","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/ExerciseItem.js":"4","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/Banner.js":"5","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/InputField.js":"6","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/data/data.js":"7","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/Workout.js":"8"},{"size":500,"mtime":1608427114522,"results":"9","hashOfConfig":"10"},{"size":2231,"mtime":1608442098968,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608427114523,"results":"12","hashOfConfig":"10"},{"size":1290,"mtime":1608435817262,"results":"13","hashOfConfig":"10"},{"size":645,"mtime":1608431217773,"results":"14","hashOfConfig":"10"},{"size":1986,"mtime":1608442215799,"results":"15","hashOfConfig":"10"},{"size":792,"mtime":1608435230795,"results":"16","hashOfConfig":"10"},{"size":1753,"mtime":1608443498682,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18hz6p9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/index.js",[],["38","39"],"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/App.js",["40"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { data } from \"./data/data\";\nimport ExerciseItem from \"./components/ExerciseItem\";\nimport { Grid } from \"./components/ExerciseItem\";\nimport Banner from \"./components/Banner\";\nimport InputField from \"./components/InputField\";\nimport Workout from \"./components/Workout\";\n\nfunction App() {\n\tvar firstSelectionMade = false;\n\tconst [exercises, setExercises] = useState(data.exercises);\n\tconst [selectedExercise, setSelectedExercise] = useState({\n\t\ttitle: \"\",\n\t\treps: 0\n\t});\n\tconst [exercisesToDo, setExercisesToDo] = useState([]);\n\tconst [isWorkout, setIsWorkout] = useState(false);\n\n\tfunction handleSelection(newTitle) {\n\t\tfirstSelectionMade = true;\n\n\t\tsetSelectedExercise((prevState) => ({\n\t\t\t...prevState,\n\t\t\ttitle: newTitle\n\t\t}));\n\n\t\tsetExercises((prevState) =>\n\t\t\tprevState.map((e) =>\n\t\t\t\te.title === newTitle\n\t\t\t\t\t? { ...e, isSelected: true }\n\t\t\t\t\t: { ...e, isSelected: false }\n\t\t\t)\n\t\t);\n\t}\n\n\t// Custom input title change\n\tfunction handleTitle(e) {\n\t\tsetSelectedExercise((prevState) => ({\n\t\t\t...prevState,\n\t\t\ttitle: e.target.value\n\t\t}));\n\t}\n\n\t// Input rep change\n\tfunction handleReps(e) {\n\t\tsetSelectedExercise((prevState) => ({\n\t\t\t...prevState,\n\t\t\treps: e.target.value\n\t\t}));\n\t}\n\n\tfunction startWorkout() {\n\t\tsetExercisesToDo((prevState) => [\n\t\t\t...prevState,\n\t\t\t{ title: selectedExercise.title, reps: selectedExercise.reps }\n\t\t]);\n\n\t\t// Toggle workout screen\n\t\tsetIsWorkout((prevState) => !prevState);\n\t}\n\n\tfunction exitWorkout() {\n\t\tsetIsWorkout((prevState) => !prevState);\n\t}\n\n\t// useEffect(() => {\n\n\t// }, [exercisesToDo]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Banner />\n\t\t\t<Grid>\n\t\t\t\t{exercises.map((e) => (\n\t\t\t\t\t<ExerciseItem\n\t\t\t\t\t\timg={e.img}\n\t\t\t\t\t\ttitle={e.title}\n\t\t\t\t\t\tisSelected={e.isSelected}\n\t\t\t\t\t\thandleSelection={handleSelection}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t{selectedExercise.title === \"\" && firstSelectionMade ? null : (\n\t\t\t\t<InputField\n\t\t\t\t\tselectedExercise={selectedExercise}\n\t\t\t\t\thandleTitle={handleTitle}\n\t\t\t\t\thandleReps={handleReps}\n\t\t\t\t\tstartWorkout={startWorkout}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isWorkout && (\n\t\t\t\t<Workout\n\t\t\t\t\texercisesToDo={exercisesToDo}\n\t\t\t\t\texitWorkout={exitWorkout}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/reportWebVitals.js",[],"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/ExerciseItem.js",["41"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Grid = styled.div`\n\t/* height: 100vh; */\n\tmax-height: calc(100vh - 100px);\n\twidth: 100%;\n\ttop: 100px;\n\tposition: fixed;\n\tdisplay: grid;\n\t/* padding: 10px; */\n\t/* grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); */\n\t/* gap: 5px; */\n\tgrid-template-columns: auto auto auto auto;\n\tjustify-items: center;\n\talign-content: center;\n`;\n\nconst Item = styled.div`\n\tborder-radius: 15px;\n\twidth: 250px;\n\theight: 250px;\n\tbox-shadow: 0 0 15px 3px #00000020;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\tpadding: 20px;\n\tcursor: pointer;\n\tmargin: 10px;\n\ttransition: 0.1s ease-in-out;\n\n\t&:hover,\n\t&.selected {\n\t\tbox-shadow: 0 0 15px 5px #78c5ef;\n\t}\n\n\timg {\n\t\theight: 125px;\n\t\twidth: 125px;\n\t\tpadding: 10px;\n\t\tobject-fit: contain;\n\t\tborder: 2px solid white;\n\t\tborder-radius: 100%;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t}\n`;\n\nconst Title = styled.div`\n\tfont-weight: 600;\n\tfont-size: 1.2em;\n`;\n\nfunction ExerciseItem({ img, title, isSelected, handleSelection }) {\n\treturn (\n\t\t<Item\n\t\t\tclassName={isSelected ? \"selected\" : \"\"}\n\t\t\tonClick={() => handleSelection(title)}\n\t\t>\n\t\t\t<img src={img} />\n\t\t\t<Title>{title}</Title>\n\t\t</Item>\n\t);\n}\n\nexport default ExerciseItem;\n","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/Banner.js",[],"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/InputField.js",["42"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\theight: 100px;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tbox-shadow: 0 0 15px 3px #00000020;\n\tpadding: 10px;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-evenly;\n\n\t.exercise {\n\t\tflex: 0.5;\n\t\theight: 80%;\n\t\tborder: none;\n\t\toutline: none;\n\t\tborder-radius: 15px;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t\tfont-size: 1.2em;\n\t\tpadding: 0 20px;\n\t}\n\n\t.reps {\n\t\tflex: 0.2;\n\t\theight: 80%;\n\t\tborder: none;\n\t\toutline: none;\n\t\tborder-radius: 15px;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t\tfont-size: 1.2em;\n\t\tpadding: 0 20px;\n\t}\n\n\t.submit {\n\t\tflex: 0.2;\n\t\theight: 80%;\n\t\tborder: none;\n\t\toutline: none;\n\t\tborder-radius: 15px;\n\t\tbox-shadow: 0 0 15px 3px #00000020;\n\t\tbackground-color: #fff;\n\t\tfont-size: 1.2em;\n\t\tpadding: 0 10px;\n\t\tcursor: pointer;\n\t}\n`;\n\nfunction InputField({\n\tselectedExercise,\n\thandleTitle,\n\thandleReps,\n\tstartWorkout\n}) {\n\t// const [title, setTitle] = useState(\n\t// \tselectedExercise.title === \"Custom\" ? \"\" : selectedExercise.title\n\t// );\n\t// const [reps, setReps] = useState(0);\n\n\t// function handleTitle(e) {\n\t// \tsetTitle(e.target.value);\n\t// }\n\n\t// function handleReps(e) {\n\t// \tsetReps(e.target.value);\n\t// }\n\n\treturn (\n\t\t<Container>\n\t\t\t<input\n\t\t\t\tclassName=\"exercise\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Name of Exercise\"\n\t\t\t\tvalue={\n\t\t\t\t\tselectedExercise.title === \"Custom\"\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: selectedExercise.title\n\t\t\t\t}\n\t\t\t\t//=== \"Custom\" ? title : selectedExercise.title\n\t\t\t\tonChange={\n\t\t\t\t\thandleTitle\n\t\t\t\t\t// selectedExercise.title\n\t\t\t\t\t// === \"Custom\" ? handleTitle : null\n\t\t\t\t}\n\t\t\t\t// readOnly={selectedExercise.title !== \"Custom\"}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName=\"reps\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"Reps\"\n\t\t\t\tvalue={selectedExercise.reps}\n\t\t\t\tonChange={handleReps}\n\t\t\t/>\n\t\t\t<button className=\"submit\" onClick={startWorkout}>\n\t\t\t\tStart\n\t\t\t</button>\n\t\t</Container>\n\t);\n}\n\nexport default InputField;\n","/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/data/data.js",[],"/Users/jasoncheung/Desktop/Code/cumulative-workout-tracker/src/components/Workout.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":60,"column":4,"nodeType":"53","endLine":60,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]